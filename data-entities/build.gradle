plugins {
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.5"
    id "com.ewerk.gradle.plugins.annotation-processor" version "1.0.2"
}
configurations {
    hibernateJpaModelGenTool
}

sourceSets {
    main {
        // Fixes problem with JPA EntityManager factory requiring classes and persistence.xml in same path
        output.resourcesDir = output.classesDir
    }
}
apply plugin: 'java'
apply plugin: com.ewerk.gradle.plugins.QuerydslPlugin
description = 'JPA Data Entities'

dependencies {
    compile 'com.mysema.querydsl:querydsl-core'
    compile 'com.mysema.querydsl:querydsl-jpa'
    compile 'org.hibernate:hibernate-validator'
    compile 'javax.validation:validation-api'
    compile 'org.hibernate:hibernate-entitymanager'
    compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api'
    compile 'javax.enterprise:cdi-api'
    testCompile 'commons-dbcp:commons-dbcp'
    testCompile 'com.h2database:h2'
    testCompile 'junit:junit'
    testCompile 'ch.qos.logback:logback-classic'
    testCompile 'org.slf4j:jcl-over-slf4j'
    testCompile 'org.springframework:spring-test'
    testCompile 'org.springframework:spring-orm'
    testCompile 'org.springframework:spring-jdbc'
    testCompile 'org.springframework:spring-beans'
    testCompile 'org.springframework:spring-core'
    testCompile 'org.springframework:spring-aop'
    testCompile 'org.springframework:spring-context'
    testCompile 'com.atomikos:transactions-jta'
    hibernateJpaModelGenTool 'org.hibernate:hibernate-jpamodelgen'
}

querydsl {
    library = "com.mysema.querydsl:querydsl-apt:$queryDslVersion"
    jpa = true
}

def generatedJpaMetamodelSrcDir = file("${buildDir}/generated-src/jpamodelgen/${name}")

sourceSets {
    test {
        java {
            srcDir generatedJpaMetamodelSrcDir
        }
    }
}

annotationProcessor {
    library 'org.hibernate:hibernate-jpamodelgen'
    processor 'org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor'
    sourcesDir generatedJpaMetamodelSrcDir.path
}


test {
    if (logger.isInfoEnabled()) {
        testLogging.showStandardStreams = true
    }
}